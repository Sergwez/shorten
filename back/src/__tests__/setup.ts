import { customMatchers } from './test-utils';

// –†–∞—Å—à–∏—Ä—è–µ–º Jest –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –º–∞—Ç—á–µ—Ä–∞–º–∏
expect.extend(customMatchers);

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–æ–≤
process.env.NODE_ENV = 'test';
process.env.PORT = '0'; // –ü–æ–∑–≤–æ–ª—è–µ–º —Å–∏—Å—Ç–µ–º–µ –≤—ã–±—Ä–∞—Ç—å —Å–≤–æ–±–æ–¥–Ω—ã–π –ø–æ—Ä—Ç

// –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
jest.setTimeout(30000);

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤
beforeAll(async () => {
  // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
  console.log('üß™ Starting test suite...');
});

afterAll(async () => {
  // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –¥–ª—è —á–∏—Å—Ç–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤
  console.log('‚úÖ Test suite completed');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–Ω—ã—Ö –ø—Ä–æ–º–∏—Å–æ–≤
process.on('unhandledRejection', (reason, promise) => {
  // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤
  if (
    !reason ||
    (typeof reason === 'string' && reason.includes('Connection is closed')) ||
    (reason instanceof Error && reason.message?.includes('Connection is closed'))
  ) {
    return; // –ù–µ –ª–æ–≥–∏—Ä—É–µ–º —ç—Ç–∏ –æ—à–∏–±–∫–∏
  }
  // –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã
  if (process.env.NODE_ENV !== 'test') {
    console.error('Unhandled Rejection at:', promise, 'reason:', reason);
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–Ω—ã—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π
process.on('uncaughtException', (error) => {
  // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤
  if (error.message?.includes('Connection is closed')) {
    return;
  }
  if (process.env.NODE_ENV !== 'test') {
    console.error('Uncaught Exception:', error);
  }
});

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–∏–ø—ã –¥–ª—è TypeScript
declare global {
  namespace jest {
    interface Matchers<R> {
      toBeValidShortUrl(): R;
      toHaveValidTimestamp(): R;
    }
  }
} 